# Parameters for point cloud conversion node
# it converts a sensor_msgs/PointCloud2 to a rmcl_msgs/O1DnStamped
# simple fitering can be achieved by skipping rows or cols
rmcl_depth_conversion:
  ros__parameters:
    use_sim_time: True
    debug_cloud: True
    width:
      skip_begin: 0 # skip elements from begin  
      skip_end:   0 # skip elements from end
      increment:  4 # increment to skip data. Simple filter to reduce scan density
    height:
      skip_begin: 0 # cutting height from begin
      skip_end:   100 # cutting height from end
      increment:  2 # increment to skip data. Simple filter to reduce scan density 
    model:
      range_min: 0.3
      range_max: 20.0

# Parameters for the MICP-L node
micp_localization:
  ros__parameters:
    use_sim_time: True

    # required
    base_frame: base_footprint
    map_frame: map
    odom_frame: odom

    # maximum number of correction steps per second
    # lower this to decrease the correction speed but save energy 
    correction_rate_max: 30.0
    optimization_iterations: 5
    tf_time_source: 1 # 0: measurement_latest, 1: correction_latest
    tf_rate: 100.0
    broadcast_tf: True
    publish_pose: True
    pose_noise: 0.01 # minimum noise of pose. can be set from sensor noise

    # adjust max distance dependent of the state of localization
    adaptive_max_dist: True # enable adaptive max dist

    # DEBUGGING
    visualize_correspondences: True # TODO: readd this
    disable_correction: False

    # initial pose changes
    initial_pose_offset: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0] # translation + euler angles (6) or translation + quaternion (7)

    # describe your sensor setup here
    sensors: # list of range sensors - at least one is required
      rgbd_camera:
        data_source: topic
        model_type: o1dn # TODO: test pinhole
        topic_name: /rmcl_inputs/rgbd_camera
        correspondences:
          backend: embree
          type: RC
          adaptive_max_dist_min: 0.5
          max_dist: 2.0
          visualize: True